# Global options common to every model
actAs: [Timestampable]
options:
  type: INNODB


Country:
  columns:
    id:   { type: integer, primary: true, autoincrement: true }
    code: { type: string(3), fixed: true, notnull: true }
    name: { type: string(60), notnull: true }
  indexes:
    country_name:
      fields:
        name: { length: 20 }


Region:
  columns:
    id:         { type: integer, primary: true, autoincrement: true }
    code:       { type: string(3), fixed: true, notnull: true }
    name:       { type: string(60), notnull: true }
    country_id: { type: integer, notnull: true }
  relations:
    Country:    { foreignAlias: Regions, onDelete: cascade }
  indexes:
    region_name:
      fields:
        name: { length: 20 }


Island:
  columns:
    id:         { type: integer, primary: true, autoincrement: true }
    code:       { type: string(2), fixed: true, notnull: true }
    name:       { type: string(60), notnull: true }
    region_id:  { type: integer, notnull: true }
  relations:
    Region:    { foreignAlias: Islands, onDelete: cascade }
  indexes:
    island_name:
      fields:
        name: { length: 20 }


LocationPicture:
  columns:
    id:           { type: integer, primary: true, autoincrement: true }
    filename:     { type: string(255), notnull: true }
    location_id:  { type: integer, notnull: true }
  relations:
    Location:     { foreignAlias: Pictures, onDelete: cascade }
  actAs:
    Timestampable:
    Picture:
      moduleName: location


Location:
  columns:
    id:         { type: integer, primary: true, autoincrement: true }
    name:       { type: string(255), notnull: true }
    latitude:   { type: string(10), fixed: true }
    longitude:  { type: string(10), fixed: true }
    country_id: { type: integer, notnull: true }
    region_id:  { type: integer, notnull: true }
    island_id:  { type: integer }
    remarks:    { type:string }
  relations:
    Country:    { foreignAlias: Locations }
    Region:     { foreignAlias: Locations }
    Island:     { foreignAlias: Locations }
  indexes:
    location_name:
      fields:
        name: { length: 20 }


Environment:
  columns:
    id:   { type: integer, primary: true, autoincrement: true }
    name: { type: string(127), notnull: true }
  indexes:
    environment_name:
      fields:
        name: { length: 20 }


Habitat:
  columns:
    id:   { type: integer, primary: true, autoincrement: true }
    name: { type: string(127), notnull: true }
    description: { type: string }
  indexes:
    habitat_name:
      fields:
        name: { length: 20 }


Radiation:
  columns:
    id:   { type: integer, primary: true, autoincrement: true }
    name: { type: string(127), notnull: true }
  indexes:
    radiation_name:
      fields:
        name: { length: 20 }


FieldPicture:
  columns:
    id:           { type: integer, primary: true, autoincrement: true }
    filename:     { type: string(255), notnull: true }
    sample_id:    { type: integer, notnull: true }
  relations:
    Sample:     { foreignAlias: FieldPictures, onDelete: cascade }
  actAs:
    Timestampable:
    Picture:
      moduleName: sample


DetailedPicture:
  columns:
    id:           { type: integer, primary: true, autoincrement: true }
    filename:     { type: string(255), notnull: true }
    sample_id:    { type: integer, notnull: true }
  relations:
    Sample:     { foreignAlias: DetailedPictures, onDelete: cascade }
  actAs:
    Timestampable:
    Picture:
      moduleName: sample


MicroscopicPicture:
  columns:
    id:           { type: integer, primary: true, autoincrement: true }
    filename:     { type: string(255), notnull: true }
    sample_id:    { type: integer, notnull: true }
  relations:
    Sample:     { foreignAlias: MicroscopicPictures, onDelete: cascade }
  actAs:
    Timestampable:
    Picture:
      moduleName: sample


Sample:
  columns:
    id:                   { type: integer, primary: true, autoincrement: true }
    notebook_code:        { type: string(40) }
    location_id:          { type: integer, notnull: true }
    location_details:     { type: string(80) }
    latitude:             { type: string(10), fixed: true }
    longitude:            { type: string(10), fixed: true }
    environment_id:       { type: integer, notnull: true }
    is_extremophile:      { type: boolean, notnull: true, default: false }
    habitat_id:           { type: integer, notnull: true }
    ph:                   { type: float }
    conductivity:         { type: float }
    temperature:          { type: float }
    salinity:             { type: float }
    altitude:             { type: float }
    radiation_id:         { type: integer }
    collection_date:      { type: date, notnull: true }
    remarks:              { type: string }
  relations:
    Location:             { foreignAlias: Samples }
    Environment:          { foreignAlias: Samples }
    Habitat:              { foreignAlias: Samples }
    Radiation:            { foreignAlias: Samples }
    Collectors:           { foreignAlias: Collectors, class: Collector, local: sample_id, foreign: collector_id, refClass: SampleCollectors }
  actAs:
    Timestampable:
    Date:
  indexes:
    sample_notebook_code:
      fields: [notebook_code]


Collector:
  columns:
    id:       { type: integer, primary: true, autoincrement: true }
    name:     { type: string(127), notnull: true }
    surname:  { type: string(127), notnull: true }
    email:    { type: string(255) }
  relations:
    Samples:  { foreignAlias: Samples, class: Sample, local: collector_id, foreign: sample_id, refClass: SampleCollectors }
    PatentDeposits:  { foreignAlias: PatentDeposits, class: PatentDeposit, local: collector_id, foreign: patent_deposit_id, refClass: PatentDepositCollectors }
    MaintenanceDeposits:  { foreignAlias: MaintenanceDeposits, class: MaintenanceDeposit, local: collector_id, foreign: maintenance_deposit_id, refClass: MaintenanceDepositCollectors }
  indexes:
    collector_name:
      fields:
        name: { length: 20 }
    collector_surname:
      fields:
        surname: { length: 20 }


SampleCollectors:
  columns:
    sample_id:    { type: integer, primary: true }
    collector_id: { type: integer, primary: true }
  relations:
    Sample:       { onDelete: cascade }


Event:
  columns:
    id:           { type: integer, primary: true, autoincrement: true }
    user_id:      { type: integer, notnull: true }
    ip_address:   { type: string(15), notnull: true }
    module:       { type: string(40), notnull: true }
    action:       { type: string(40), notnull: true }
    description:  { type: string(255), notnull: true }
  relations:
    User:         { class: sfGuardUser, local: user_id, foreignAlias: Events }


Isolator:
  columns:
    id:       { type: integer, primary: true, autoincrement: true }
    name:     { type: string(127), notnull: true }
    surname:  { type: string(127), notnull: true }
    email:    { type: string(255) }
  relations:
    Strains:        { foreignAlias: Strains, class: Strain, local: isolator_id, foreign: strain_id, refClass: StrainIsolators }
    PatentDeposits: { foreignAlias: PatentDeposits, class: PatentDeposit, local: isolator_id, foreign: patent_deposit_id, refClass: PatentDepositIsolators }
    MaintenanceDeposits:  { foreignAlias: MaintenanceDeposits, class: MaintenanceDeposit, local: isolator_id, foreign: maintenance_deposit_id, refClass: MaintenanceDepositIsolators }
    Isolations:     { foreignAlias: Isolations, class: Isolation, local: isolator_id, foreign: isolation_id, refClass: IsolationIsolators }
  indexes:
    isolator_name:
      fields:
        name: { length: 20 }
    isolator_surname:
      fields:
        surname: { length: 20 }


StrainIsolators:
  columns:
    strain_id:    { type: integer, primary: true }
    isolator_id:  { type: integer, primary: true }
  relations:
    Strain:       { onDelete: cascade }


Identifier:
  columns:
    id:       { type: integer, primary: true, autoincrement: true }
    name:     { type: string(127), notnull: true }
    surname:  { type: string(127), notnull: true }
    email:    { type: string(255) }
  indexes:
    identifier_name:
      fields:
        name: { length: 20 }
    identifier_surname:
      fields:
        surname: { length: 20 }


MaintenanceStatus:
  columns:
    id:       { type: integer, primary: true, autoincrement: true }
    name:     { type: enum, values: [Liquid, Solid, Cryopreserved] }
  indexes:
    maintenance_status_name:
      fields:
        name: { length: 20 }
  relations:
    Strains:        { foreignAlias: Strains, class: Strain, local: maintenance_status_id, foreign: strain_id, refClass: StrainMaintenanceStatus }
    PatentDeposits: { foreignAlias: PatentDeposits, class: PatentDeposit, local: maintenance_status_id, foreign: patent_deposit_id, refClass: PatentDepositMaintenanceStatus }
    MaintenanceDeposits:  { foreignAlias: MaintenanceDeposits, class: MaintenanceDeposit, local: maintenance_status_id, foreign: maintenance_deposit_id, refClass: MaintenanceDepositMaintenanceStatus }


CryopreservationMethod:
  columns:
    id:       { type: integer, primary: true, autoincrement: true }
    name:     { type: string(127), notnull: true }
  indexes:
    cryopreservation_method_name:
      fields:
        name: { length: 20 }


TaxonomicClass:
  columns:
    id:           { type: integer, primary: true, autoincrement: true }
    name:         { type: string(255), notnull: true }
  indexes:
    taxonomic_class_name:
      fields:
        name: { length: 20 }


Genus:
  columns:
    id:           { type: integer, primary: true, autoincrement: true }
    name:         { type: string(255), notnull: true }
  indexes:
    genus_name:
      fields:
        name: { length: 20 }


Species:
  columns:
    id:           { type: integer, primary: true, autoincrement: true }
    name:         { type: string(255), notnull: true }
  indexes:
    species_name:
      fields:
        name: { length: 20 }


Authority:
  columns:
    id:           { type: integer, primary: true, autoincrement: true }
    name:         { type: string(255), notnull: true }
  indexes:
    authority_name:
      fields:
        name: { length: 20 }


CultureMedium:
  columns:
    id:           { type: integer, primary: true, autoincrement: true }
    name:         { type: string(255), notnull: true }
    description:  { type: string(255), notnull: true }
    link:         { type: string(1024), notnull: true }
    is_public:    { type: boolean, notnull: true, default: false }
    # amount:       { type: integer, notnull: true, default: 0 }
  relations:
      Strains:        { foreignAlias: Strains, class: Strain, local: culture_medium_id, foreign: strain_id, refClass: StrainCultureMedia }
      PatentDeposits: { foreignAlias: PatentDeposits, class: PatentDeposit, local: culture_medium_id, foreign: patent_deposit_id, refClass: PatentDepositCultureMedia }
      MaintenanceDeposits:  { foreignAlias: MaintenanceDeposits, class: MaintenanceDeposit, local: culture_medium_id, foreign: maintenance_deposit_id, refClass: MaintenanceDepositCultureMedia }
      Isolations:     { foreignAlias: Isolations, class: Isolation, local: culture_medium_id, foreign: isolation_id, refClass: IsolationCultureMedia }
  indexes:
    culture_medium_name:
      fields:
        name: { length: 20 }


StrainRelative:
  columns:
    id:         { type: integer, primary: true, autoincrement: true }
    name:       { type: string(255), notnull: true }
    strain_id:  { type: integer, notnull: true }
  relations:
    Strain:     { foreignAlias: Relatives, onDelete: cascade }


AxenityTest:
  columns:
    id:         { type: integer, primary: true, autoincrement: true }
    date:       { type: date, notnull: true }
    strain_id:  { type: integer, notnull: true }
  relations:
    Strain:     { foreignAlias: AxenityTests, onDelete: cascade }
  actAs:
    Timestampable:
    Date:


StrainPicture:
  columns:
    id:           { type: integer, primary: true, autoincrement: true }
    filename:     { type: string(255), notnull: true }
    strain_id:    { type: integer, notnull: true }
  relations:
    Strain:       { foreignAlias: Pictures, onDelete: cascade }
  actAs:
    Timestampable:
    Picture:
      moduleName: strain


Container:
  columns:
    id:   { type: integer, primary: true, autoincrement: true }
    name: { type: string(255), notnull: true }
  indexes:
    container_name:
      fields:
        name: { length: 20 }


Strain:
  columns:
    id:                         { type: integer, primary: true, autoincrement: true }
    code:                       { type: integer, notnull: true }
    clone_number:               { type: integer }
    sample_id:                  { type: integer }
    depositor_id:               { type: integer }
    is_epitype:                 { type: boolean, notnull: true, default: false }
    is_axenic:                  { type: boolean, notnull: true, default: false }
    is_public:                  { type: boolean, notnull: true, default: false }
    taxonomic_class_id:         { type: integer, notnull: true }
    genus_id:                   { type: integer, notnull: true }
    species_id:                 { type: integer, notnull: true }
    authority_id:               { type: integer, notnull: true }
    isolation_date:             { type: date, notnull: true }
    identifier_id:              { type: integer }
    cryopreservation_method_id: { type: integer }
    container_id:               { type: integer }
    transfer_interval:          { type: string(40) }
    observation:                { type: string }
    citations:                  { type: string }
    web_notes:                  { type: string }
    # amount:                     { type: integer, notnull: true, default: 0 }
    remarks:                    { type: string }
  relations:
    Sample:                 { foreignAlias: Strains }
    Depositor:              { foreignAlias: Strains }
    TaxonomicClass:         { foreignAlias: Strains }
    Genus:                  { foreignAlias: Strains }
    Species:                { foreignAlias: Strains }
    Authority:              { foreignAlias: Strains }
    Isolators:              { foreignAlias: Isolators, class: Isolator, local: strain_id, foreign: isolator_id, refClass: StrainIsolators }
    Identifier:             { foreignAlias: Strains }
    CryopreservationMethod: { foreignAlias: Strains }
    Container:              { foreignAlias: Strains }
    CultureMedia:           { foreignAlias: CultureMedia, class: CultureMedium, local: strain_id, foreign: culture_medium_id, refClass: StrainCultureMedia }
    MaintenanceStatus:      { foreignAlias: MaintenanceStatus, class: MaintenanceStatus, local: strain_id, foreign: maintenance_status_id, refClass: StrainMaintenanceStatus }
  actAs:
    Timestampable:
    Date:
  indexes:
    unique_code_and_clone:  { fields: [code, clone_number], type: unique }


StrainCultureMedia:
  columns:
    strain_id:          { type: integer, primary: true }
    culture_medium_id:  { type: integer, primary: true }
  relations:
    Strain:             { onDelete: cascade }


StrainMaintenanceStatus:
  columns:
    strain_id:              { type: integer, primary: true }
    maintenance_status_id:  { type: integer, primary: true }
  relations:
    Strain:      { onDelete: cascade }


sfGuardUser:
  columns:  
    avatar:             { type: string(255) }
    token:              { type: string(40), notnull: true }
    notify_new_order:   { type: boolean, notnull: true, default: true }
    notify_ready_order: { type: boolean, notnull: true, default: true }


ExtractionKit:
  columns:
    id:   { type: integer, primary: true, autoincrement: true }
    name: { type: string(127), notnull: true }
  indexes:
    extraction_kit_name:
      fields:
        name: { length: 20 }


DnaExtraction:
  columns:
    id:                   { type: integer, primary: true, autoincrement: true }
    strain_id:            { type: integer, notnull: true }
    is_public:            { type: boolean, notnull: true, default: false }
    arrival_date:         { type: date, notnull: true }
    extraction_date:      { type: date }
    extraction_kit_id:    { type: integer, notnull: true }
    concentration:        { type: decimal }
    260_280_ratio:        { type: decimal }
    260_230_ratio:        { type: decimal }
    aliquots:             { type: integer }
    genbank_link:         { type: string(255) }
    remarks:              { type: string }
  relations:
    Strain:               { foreignAlias: DnaExtractions }
    ExtractionKit:        { foreignAlias: DnaExtractions }
  indexes:
    dna_extraction_date1:
      fields: [extraction_date]
    dna_extraction_date2:
      fields: [arrival_date]


DnaPolymerase:
  columns:
    id:   { type: integer, primary: true, autoincrement: true }
    name: { type: string(127), notnull: true }
  indexes:
    dna_polymerase_name:
      fields:
        name: { length: 20 }


DnaPrimer:
  columns:
    id:           { type: integer, primary: true, autoincrement: true }
    name:         { type: string(10), notnull: true }
    direction:    { type: enum, values: [forward, reverse] }
    orientation:  { type: string(127) }
  indexes:
    dna_primer_name:
      fields:
        name: { length: 10 }


Pcr:
  columns:
    id:                     { type: integer, primary: true, autoincrement: true }
    dna_extraction_id:      { type: integer, notnull: true }
    forward_dna_primer_id:  { type: integer, notnull: true }
    reverse_dna_primer_id:  { type: integer, notnull: true }
    dna_polymerase_id:      { type: integer, notnull: true }
    pcr_program_id:         { type: integer, notnull: true }
    concentration:          { type: decimal }
    260_280_ratio:          { type: decimal }
    260_230_ratio:          { type: decimal }
    can_be_sequenced:       { type: boolean, notnull: true, default: false }
    remarks:                { type: string }
  relations:
    DnaExtraction:          { foreignAlias: Pcr }
    DnaPolymerase:          { foreignAlias: Pcr }
    ForwardPrimer:          { class: DnaPrimer, local: forward_dna_primer_id, foreignAlias: Pcr }
    ReversePrimer:          { class: DnaPrimer, local: reverse_dna_primer_id, foreignAlias: Pcr }
    PcrProgram:             { foreignAlias: Pcr }
    Gel:                    { type: many, class: PcrGel, local:id, foreign: pcr_id, orderBy: number }


PcrGel:
  columns:
    id:       { type: integer, primary: true, autoincrement: true }
    number:   { type: integer, notnull: true }
    band:     { type: decimal }
    pcr_id:   { type: integer, notnull: true }
    is_valid: { type: boolean, notnull: true, default: false }
  relations:
    Pcr:      { foreignAlias: Gel, onDelete: cascade }


DnaSequence:
  columns:
    id:       { type: integer, primary: true, autoincrement: true }
    gen:      { type: string(10), notnull: true }
    date:     { type: date, notnull: true }
    worked:   { type: boolean, notnull: true, default: false }
    remarks:  { type: string }
    pcr_id:   { type: integer, notnull: true }
  relations:
    Pcr:      { foreignAlias: Sequence }


PcrReaction:
  columns:
    id:               { type: integer, primary: true, autoincrement: true }
    dna_primer_id:    { type: integer, notnull: true }
    worked:           { type: boolean, notnull: true, default: false }
    dna_sequence_id:  { type: integer, notnull: true }
  relations:
    DnaPrimer:        { foreignAlias: Reaction }
    DnaSequence:      { foreignAlias: Reaction, onDelete: cascade }


PcrProgramStep:
  columns:
    id:             { type: integer, primary: true, autoincrement: true }
    segment:        { type: integer, notnull: true }
    temperature:    { type: decimal, notnull: true }
    duration:       { type: time, notnull: true }
    pcr_program_id: { type: integer, notnull: true }
  relations:
    PcrProgram:     { foreignAlias: Steps, onDelete: cascade }


PcrProgram:
  columns:
    id:     { type: integer, primary: true, autoincrement: true }
    name:   { type: string(127), notnull: true }
    cycles: { type: integer, notnull: true }
    start:  { type: integer, notnull: true }
    end:    { type: integer, notnull: true }
  relations:
    Steps:  { type: many, class: PcrProgramStep, local:id, foreign: pcr_program_id, orderBy: segment }


Notification:
  columns:
    id:       { type: integer, primary: true, autoincrement: true }
    message:  { type: string, notnull: true }
    status:   { type: enum, values: [new, read, deleted] }
    user_id:  { type: integer, notnull: true }
  relations:
    User:     { class: sfGuardUser, local: user_id, foreignAlias: Notifications }
  indexes:
    notification_status:
      fields: [status]


PurchaseOrder:
  columns:
    id:               { type: integer, primary: true, autoincrement: true }
    status:           { type: enum, values: [pending, processing, ready] }
    code:             { type: string(40), notnull: true }
    customer:         { type: string(512), notnull: true }
    remarks:          { type: string }
    activation_date:  { type: timestamp }
    delivery_date:    { type: timestamp }
    delivery_code:    { type: string(80) }
  actAs:
    Timestampable:
    Date:
    Saleable:
  indexes:
    purchase_order_status:
      fields: [status]


PurchaseItem:
  columns:
    id:                 { type: integer, primary: true, autoincrement: true }
    status:             { type: enum, values: [pending, processing, ready] }
    product:            { type: enum, values: [strain, culture_medium, genomic_dna] }
    product_id:         { type: integer }
    code:               { type: string(40), notnull: true }
    amount:             { type: integer, notnull: true, default: 1 }
    remarks:            { type: string }
    purchase_order_id:  { type: integer, notnull: true }
    supervisor_id:      { type: integer }
  relations:
    PurchaseOrder:      { foreignAlias: Items, onDelete: cascade }
    Supervisor:         { foreignAlias: Items, class: sfGuardUser, local: supervisor_id }
  actAs:
    Timestampable:
    Saleable:
  indexes:
    purchase_item_status:
      fields: [status]


Project:
  columns:
    id:               { type: integer, primary: true, autoincrement: true }
    strain_id:        { type: integer, notnull: true }
    amount:           { type: float, notnull: true, default: 0.0 }
    provider_id:      { type: integer, notnull: true }
    inoculation_date: { type: date, notnull: true }
    purpose:          { type: string, notnull: true }
    delivery_date:    { type: date }
    remarks:          { type: string }
  relations:
    Strain:   { foreignAlias: Projects }
    Provider: { class: sfGuardUser, local: provider_id, foreignAlias: Projects }
  indexes:
    project_inoculation_date:
      fields: [inoculation_date]
  actAs:
    Timestampable:
    Date:


Depositor:
  columns:
    id:       { type: integer, primary: true, autoincrement: true }
    name:     { type: string(127), notnull: true }
    surname:  { type: string(127), notnull: true }
    email:    { type: string(255) }
  indexes:
    depositor_name:
      fields:
        name: { length: 20 }
    depositor_surname:
      fields:
        surname: { length: 20 }


PatentDeposit:
  columns:
    id:                         { type: integer, primary: true, autoincrement: true }
    taxonomic_class_id:         { type: integer, notnull: true }
    genus_id:                   { type: integer, notnull: true }
    species_id:                 { type: integer, notnull: true }
    authority_id:               { type: integer, notnull: true }
    is_epitype:                 { type: boolean, notnull: true, default: false }
    is_axenic:                  { type: boolean, notnull: true, default: false }
    has_dna:                    { type: boolean, notnull: true, default: false }
    gen_sequence:               { type: string(256) }
    location_id:                { type: integer, notnull: true }
    environment_id:             { type: integer, notnull: true }
    habitat_id:                 { type: integer, notnull: true }
    collection_date:            { type: date }
    isolation_date:             { type: date }
    identifier_id:              { type: integer }
    depositor_id:               { type: integer, notnull: true }
    deposition_date:            { type: date, notnull: true }
    depositor_code:             { type: string(40), notnull: true }
    cryopreservation_method_id: { type: integer }
    transfer_interval:          { type: string(40) }
    viability_test:             { type: string }
    observation:                { type: string }
    citations:                  { type: string }
    remarks:                    { type: string }
    bp1_link:                   { type: string(1024), notnull: true }
    bp4_link:                   { type: string(1024), notnull: true }
  relations:
    TaxonomicClass:         { foreignAlias: PatentDeposits }
    Genus:                  { foreignAlias: PatentDeposits }
    Species:                { foreignAlias: PatentDeposits }
    Authority:              { foreignAlias: PatentDeposits }
    Location:               { foreignAlias: PatentDeposits }
    Environment:            { foreignAlias: PatentDeposits }
    Habitat:                { foreignAlias: PatentDeposits }
    Identifier:             { foreignAlias: PatentDeposits }
    Depositor:              { foreignAlias: PatentDeposits }
    CryopreservationMethod: { foreignAlias: PatentDeposits }
    Collectors:             { foreignAlias: Collectors, class: Collector, local: patent_deposit_id, foreign: collector_id, refClass: PatentDepositCollectors }
    Isolators:              { foreignAlias: Isolators, class: Isolator, local: patent_deposit_id, foreign: isolator_id, refClass: PatentDepositIsolators }
    CultureMedia:           { foreignAlias: CultureMedia, class: CultureMedium, local: patent_deposit_id, foreign: culture_medium_id, refClass: PatentDepositCultureMedia }
    MaintenanceStatus:      { foreignAlias: MaintenanceStatus, class: MaintenanceStatus, local: patent_deposit_id, foreign: maintenance_status_id, refClass: PatentDepositMaintenanceStatus }
  actAs:
    Timestampable:
    Date:


PatentDepositRelative:
  columns:
    id:                 { type: integer, primary: true, autoincrement: true }
    name:               { type: string(255), notnull: true }
    patent_deposit_id:  { type: integer, notnull: true }
  relations:
    PatentDeposit:      { foreignAlias: Relatives, onDelete: cascade }


PatentDepositCultureMedia:
  columns:
    patent_deposit_id:  { type: integer, primary: true }
    culture_medium_id:  { type: integer, primary: true }
  relations:
    PatentDeposit:      { onDelete: cascade }


PatentDepositIsolators:
  columns:
    patent_deposit_id:  { type: integer, primary: true }
    isolator_id:        { type: integer, primary: true }
  relations:
    PatentDeposit:      { onDelete: cascade }


PatentDepositCollectors:
  columns:
    patent_deposit_id:  { type: integer, primary: true }
    collector_id:       { type: integer, primary: true }
  relations:
    PatentDeposit:      { onDelete: cascade }


PatentDepositMaintenanceStatus:
  columns:
    patent_deposit_id:      { type: integer, primary: true }
    maintenance_status_id:  { type: integer, primary: true }
  relations:
    PatentDeposit:      { onDelete: cascade }


MaintenanceDeposit:
  columns:
    id:                         { type: integer, primary: true, autoincrement: true }
    taxonomic_class_id:         { type: integer, notnull: true }
    genus_id:                   { type: integer, notnull: true }
    species_id:                 { type: integer, notnull: true }
    authority_id:               { type: integer, notnull: true }
    is_epitype:                 { type: boolean, notnull: true, default: false }
    is_axenic:                  { type: boolean, notnull: true, default: false }
    has_dna:                    { type: boolean, notnull: true, default: false }
    gen_sequence:               { type: string(256) }
    location_id:                { type: integer, notnull: true }
    environment_id:             { type: integer, notnull: true }
    habitat_id:                 { type: integer, notnull: true }
    collection_date:            { type: date }
    isolation_date:             { type: date }
    identifier_id:              { type: integer }
    depositor_id:               { type: integer, notnull: true }
    deposition_date:            { type: date, notnull: true }
    depositor_code:             { type: string(40), notnull: true }
    cryopreservation_method_id: { type: integer }
    transfer_interval:          { type: string(40) }
    viability_test:             { type: string }
    observation:                { type: string }
    citations:                  { type: string }
    remarks:                    { type: string }
    mf1_link:                   { type: string(1024), notnull: true }
  relations:
    TaxonomicClass:         { foreignAlias: MaintenanceDeposits }
    Genus:                  { foreignAlias: MaintenanceDeposits }
    Species:                { foreignAlias: MaintenanceDeposits }
    Authority:              { foreignAlias: MaintenanceDeposits }
    Location:               { foreignAlias: MaintenanceDeposits }
    Environment:            { foreignAlias: MaintenanceDeposits }
    Habitat:                { foreignAlias: MaintenanceDeposits }
    Identifier:             { foreignAlias: MaintenanceDeposits }
    Depositor:              { foreignAlias: MaintenanceDeposits }
    CryopreservationMethod: { foreignAlias: MaintenanceDeposits }
    Collectors:             { foreignAlias: Collectors, class: Collector, local: maintenance_deposit_id, foreign: collector_id, refClass: MaintenanceDepositCollectors }
    Isolators:              { foreignAlias: Isolators, class: Isolator, local: maintenance_deposit_id, foreign: isolator_id, refClass: MaintenanceDepositIsolators }
    CultureMedia:           { foreignAlias: CultureMedia, class: CultureMedium, local: maintenance_deposit_id, foreign: culture_medium_id, refClass: MaintenanceDepositCultureMedia }
    MaintenanceStatus:      { foreignAlias: MaintenanceStatus, class: MaintenanceStatus, local: maintenance_deposit_id, foreign: maintenance_status_id, refClass: MaintenanceDepositMaintenanceStatus }
  actAs:
    Timestampable:
    Date:


MaintenanceDepositRelative:
  columns:
    id:                     { type: integer, primary: true, autoincrement: true }
    name:                   { type: string(255), notnull: true }
    maintenance_deposit_id: { type: integer, notnull: true }
  relations:
    MaintenanceDeposit:     { foreignAlias: Relatives, onDelete: cascade }


MaintenanceDepositCultureMedia:
  columns:
    maintenance_deposit_id: { type: integer, primary: true }
    culture_medium_id:      { type: integer, primary: true }
  relations:
    MaintenanceDeposit:     { onDelete: cascade }


MaintenanceDepositIsolators:
  columns:
    maintenance_deposit_id: { type: integer, primary: true }
    isolator_id:            { type: integer, primary: true }
  relations:
    MaintenanceDeposit:     { onDelete: cascade }


MaintenanceDepositCollectors:
  columns:
    maintenance_deposit_id: { type: integer, primary: true }
    collector_id:           { type: integer, primary: true }
  relations:
    MaintenanceDeposit:     { onDelete: cascade }


MaintenanceDepositMaintenanceStatus:
  columns:
    maintenance_deposit_id: { type: integer, primary: true }
    maintenance_status_id:  { type: integer, primary: true }
  relations:
    MaintenanceDeposit:      { onDelete: cascade }


PurificationMethod:
  columns:
    id:   { type: integer, primary: true, autoincrement: true }
    name: { type: string(127), notnull: true }
  indexes:
    purification_method_name:
      fields:
        name: { length: 20 }


Isolation:
  columns:
    id:                     { type: integer, primary: true, autoincrement: true }
    reception_date:         { type: date, notnull: true }
    isolation_subject:      { type: enum, values: [sample, strain, external] }
    sample_id:              { type: integer }
    strain_id:              { type: integer }
    external_code:          { type: string(128) }
    taxonomic_class_id:     { type: integer } # Only for external, not applicable to sample
    genus_id:               { type: integer } # Only for external, not applicable to sample
    species_id:             { type: integer } # Only for external, not applicable to sample
    authority_id:           { type: integer } # Only for external, not applicable to sample
    location_id:            { type: integer } # Only for external, automatically retrieved for sample and strain
    environment_id:         { type: integer } # Only for external, automatically retrieved for sample and strain
    habitat_id:             { type: integer } # Only for external, automatically retrieved for sample and strain
    delivery_date:          { type: date }
    purification_method_id: { type: integer, notnull: true }
    purification_details:   { type: string }
    observation:            { type: string }
    remarks:                { type: string }
  relations:
    Sample:             { foreignAlias: Isolations }
    Strain:             { foreignAlias: Isolations }
    TaxonomicClass:     { foreignAlias: Isolations }
    Genus:              { foreignAlias: Isolations }
    Species:            { foreignAlias: Isolations }
    Authority:          { foreignAlias: Isolations }
    Location:           { foreignAlias: Isolations }
    Environment:        { foreignAlias: Isolations }
    Habitat:            { foreignAlias: Isolations }
    PurificationMethod: { foreignAlias: Isolations }
    Isolators:          { foreignAlias: Isolators, class: Isolator, local: isolation_id, foreign: isolator_id, refClass: IsolationIsolators }
    CultureMedia:       { foreignAlias: CultureMedia, class: CultureMedium, local: isolation_id, foreign: culture_medium_id, refClass: IsolationCultureMedia }
  actAs:
    Timestampable:
    Date:


IsolationCultureMedia:
  columns:
    isolation_id:       { type: integer, primary: true }
    culture_medium_id:  { type: integer, primary: true }
  relations:
    Isolation:  { onDelete: cascade }


IsolationIsolators:
  columns:
    isolation_id: { type: integer, primary: true }
    isolator_id:  { type: integer, primary: true }
  relations:
    Isolation:  { onDelete: cascade }

