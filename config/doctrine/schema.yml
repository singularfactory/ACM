# Global options common to every model
actAs: [Timestampable]
options:
  type: INNODB

Country:
  columns:
    id:   { type: integer, primary: true, autoincrement: true }
    code: { type: string(3), fixed: true, notnull: true }
    name: { type: string(60), notnull: true }

Region:
  columns:
    id:         { type: integer, primary: true, autoincrement: true }
    code:       { type: string(3), fixed: true, notnull: true }
    name:       { type: string(60), notnull: true }
    country_id: { type: integer, notnull: true }
  relations:
    Country:    { foreignAlias: Regions, onDelete: cascade }

Island:
  columns:
    id:         { type: integer, primary: true, autoincrement: true }
    code:       { type: string(2), fixed: true, notnull: true }
    name:       { type: string(60), notnull: true }
    region_id:  { type: integer, notnull: true }
  relations:
    Region:    { foreignAlias: Islands, onDelete: cascade }

LocationPicture:
  columns:
    id:           { type: integer, primary: true, autoincrement: true }
    filename:     { type: string(255), notnull: true }
    location_id:  { type: integer, notnull: true }
  relations:
    Location:     { foreignAlias: Pictures, onDelete: cascade }
  actAs:
    Timestampable:
    Picture:
      moduleName: location

Location:
  columns:
    id:         { type: integer, primary: true, autoincrement: true }
    name:       { type: string(255), notnull: true }
    latitude:   { type: string(10), fixed: true }
    longitude:  { type: string(10), fixed: true }
    country_id: { type: integer, notnull: true }
    region_id:  { type: integer, notnull: true }
    island_id:  { type: integer }
    remarks:    { type:string }
  relations:
    Country:    { foreignAlias: Locations }
    Region:     { foreignAlias: Locations }
    Island:     { foreignAlias: Locations }

Environment:
  columns:
    id:   { type: integer, primary: true, autoincrement: true }
    name: { type: string(127), notnull: true }

Habitat:
  columns:
    id:   { type: integer, primary: true, autoincrement: true }
    name: { type: string(127), notnull: true }
    description: { type: string }

Radiation:
  columns:
    id:   { type: integer, primary: true, autoincrement: true }
    name: { type: string(127), notnull: true }

FieldPicture:
  columns:
    id:           { type: integer, primary: true, autoincrement: true }
    filename:     { type: string(255), notnull: true }
    sample_id:    { type: integer, notnull: true }
  relations:
    Sample:     { foreignAlias: FieldPictures, onDelete: cascade }
  actAs:
    Timestampable:
    Picture:
      moduleName: sample

DetailedPicture:
  columns:
    id:           { type: integer, primary: true, autoincrement: true }
    filename:     { type: string(255), notnull: true }
    sample_id:    { type: integer, notnull: true }
  relations:
    Sample:     { foreignAlias: DetailedPictures, onDelete: cascade }
  actAs:
    Timestampable:
    Picture:
      moduleName: sample

MicroscopicPicture:
  columns:
    id:           { type: integer, primary: true, autoincrement: true }
    filename:     { type: string(255), notnull: true }
    sample_id:    { type: integer, notnull: true }
  relations:
    Sample:     { foreignAlias: MicroscopicPictures, onDelete: cascade }
  actAs:
    Timestampable:
    Picture:
      moduleName: sample

Sample:
  columns:
    id:                   { type: integer, primary: true, autoincrement: true }
    notebook_code:        { type: integer, notnull: true }
    location_id:          { type: integer, notnull: true }
    latitude:             { type: string(10), fixed: true }
    longitude:            { type: string(10), fixed: true }
    environment_id:       { type: integer, notnull: true }
    is_extremophile:      { type: boolean, notnull: true, default: false }
    habitat_id:           { type: integer, notnull: true }
    ph:                   { type: float }
    conductivity:         { type: float }
    temperature:          { type: float }
    salinity:             { type: float }
    altitude:             { type: float }
    radiation_id:         { type: integer, notnull: true }
    collector_id:         { type: integer, notnull: true }
    collection_date:      { type: date, notnull: true }
    remarks:              { type: string }
  relations:
    Location:             { foreignAlias: Samples }
    Environment:          { foreignAlias: Samples }
    Habitat:              { foreignAlias: Samples }
    Radiation:            { foreignAlias: Samples }
    Collector:            { foreignAlias: Samples }

Collector:
  columns:
    id:       { type: integer, primary: true, autoincrement: true }
    name:     { type: string(127), notnull: true }
    surname:  { type: string(127), notnull: true }
    email:    { type: string(255) }

Event:
  columns:
    id:           { type: integer, primary: true, autoincrement: true }
    user_id:      { type: integer, notnull: true }
    ip_address:   { type: string(15), notnull: true }
    module:       { type: string(40), notnull: true }
    action:       { type: string(40), notnull: true }
    description:  { type: string(255), notnull: true }
  relations:
    User:         { class: sfGuardUser, local: user_id, foreignAlias: Events }

Isolator:
  columns:
    id:       { type: integer, primary: true, autoincrement: true }
    name:     { type: string(127), notnull: true }
    surname:  { type: string(127), notnull: true }
    email:    { type: string(255) }

Depositor:
  columns:
    id:       { type: integer, primary: true, autoincrement: true }
    name:     { type: string(127), notnull: true }
    surname:  { type: string(127), notnull: true }
    email:    { type: string(255) }

Identifier:
  columns:
    id:       { type: integer, primary: true, autoincrement: true }
    name:     { type: string(127), notnull: true }
    surname:  { type: string(127), notnull: true }
    email:    { type: string(255) }

MaintenanceStatus:
  columns:
    id:       { type: integer, primary: true, autoincrement: true }
    name:     { type: enum, values: [Liquid, Solid, Cryopreserved] }

CryopreservationMethod:
  columns:
    id:       { type: integer, primary: true, autoincrement: true }
    name:     { type: string(127), notnull: true }

TaxonomicClass:
  columns:
    id:           { type: integer, primary: true, autoincrement: true }
    name:         { type: string(255), notnull: true }

Genus:
  columns:
    id:           { type: integer, primary: true, autoincrement: true }
    name:         { type: string(255), notnull: true }

Species:
  columns:
    id:           { type: integer, primary: true, autoincrement: true }
    name:         { type: string(255), notnull: true }

Authority:
  columns:
    id:           { type: integer, primary: true, autoincrement: true }
    name:         { type: string(255), notnull: true }

CultureMedium:
  columns:
    id:           { type: integer, primary: true, autoincrement: true }
    name:         { type: string(255), notnull: true }
    description:  { type: string, notnull: true }
    link:         { type: string(1024), notnull: true }
    is_public:    { type: boolean, notnull: true, default: false }
    amount:       { type: integer, notnull: true, default: 0 }
  relations:
      Strains:    { foreignAlias: Strains, class: Strain, local: culture_medium_id, foreign: strain_id, refClass: StrainCultureMedia }

StrainRelative:
  columns:
    id:         { type: integer, primary: true, autoincrement: true }
    name:       { type: string(255), notnull: true }
    strain_id:  { type: integer, notnull: true }
  relations:
    Strain:     { foreignAlias: Relatives, onDelete: cascade }

StrainPicture:
  columns:
    id:           { type: integer, primary: true, autoincrement: true }
    filename:     { type: string(255), notnull: true }
    strain_id:    { type: integer, notnull: true }
  relations:
    Strain:       { foreignAlias: Pictures, onDelete: cascade }
  actAs:
    Timestampable:
    Picture:
      moduleName: strain

Strain:
  columns:
    id:                         { type: integer, primary: true, autoincrement: true }
    sample_id:                  { type: integer }
    is_epitype:                 { type: boolean, notnull: true, default: false }
    is_axenic:                  { type: boolean, notnull: true, default: false }
    is_public:                  { type: boolean, notnull: true, default: false }
    taxonomic_class_id:         { type: integer, notnull: true }
    genus_id:                   { type: integer, notnull: true }
    species_id:                 { type: integer, notnull: true }
    authority_id:               { type: integer, notnull: true }
    isolator_id:                { type: integer, notnull: true }
    isolation_date:             { type: date, notnull: true }
    depositor_id:               { type: integer }
    deposition_date:            { type: date }
    identifier_id:              { type: integer }
    maintenance_status_id:      { type: integer, notnull: true }
    cryopreservation_method_id: { type: integer } 
    transfer_interval:          { type: string(40) }
    observation:                { type: string }
    citations:                  { type: string }
    web_notes:                  { type: string }
    amount:                     { type: integer, notnull: true, default: 0 }
    remarks:                    { type: string }
  relations:
    Sample:                 { foreignAlias: Strains }
    TaxonomicClass:         { foreignAlias: Strains }
    Genus:                  { foreignAlias: Strains }
    Species:                { foreignAlias: Strains }
    Authority:              { foreignAlias: Strains }
    Isolator:               { foreignAlias: Strains }
    Depositor:              { foreignAlias: Strains }
    Identifier:             { foreignAlias: Strains }
    MaintenanceStatus:      { foreignAlias: Strains }
    CryopreservationMethod: { foreignAlias: Strains }
    CultureMedia:           { foreignAlias: CultureMedia, class: CultureMedium, local: strain_id, foreign: culture_medium_id, refClass: StrainCultureMedia }

StrainCultureMedia:
  columns:
    strain_id:          { type: integer, primary: true }
    culture_medium_id:  { type: integer, primary: true }

sfGuardUser:  
  columns:  
    avatar:             { type: string(255) }
    token:              { type: string(40), notnull: true }
    notify_new_order:   { type: boolean, notnull: true, default: true }
    notify_ready_order: { type: boolean, notnull: true, default: true }

ExtractionKit:
  columns:
    id:   { type: integer, primary: true, autoincrement: true }
    name: { type: string(127), notnull: true }

DnaExtraction:
  columns:
    id:                   { type: integer, primary: true, autoincrement: true }
    strain_id:            { type: integer, notnull: true }
    is_public:            { type: boolean, notnull: true, default: false }
    arrival_date:         { type: date, notnull: true }
    extraction_date:      { type: date }
    extraction_kit_id:    { type: integer, notnull: true }
    concentration:        { type: decimal }
    260_280_ratio:        { type: decimal }
    260_230_ratio:        { type: decimal }
    aliquots:             { type: integer }
    genbank_link:         { type: string(255) }
    remarks:              { type: string }
  relations:
    Strain:               { foreignAlias: DnaExtractions }
    ExtractionKit:        { foreignAlias: DnaExtractions }

DnaPolymerase:
  columns:
    id:   { type: integer, primary: true, autoincrement: true }
    name: { type: string(127), notnull: true }

DnaPrimer:
  columns:
    id:           { type: integer, primary: true, autoincrement: true }
    name:         { type: string(10), notnull: true }
    direction:    { type: enum, values: [forward, reverse] }
    orientation:  { type: string(127) }

Pcr:
  columns:
    id:                     { type: integer, primary: true, autoincrement: true }
    dna_extraction_id:      { type: integer, notnull: true }
    forward_dna_primer_id:  { type: integer, notnull: true }
    reverse_dna_primer_id:  { type: integer, notnull: true }
    dna_polymerase_id:      { type: integer, notnull: true }
    pcr_program_id:         { type: integer, notnull: true }
    concentration:          { type: decimal }
    260_280_ratio:          { type: decimal }
    260_230_ratio:          { type: decimal }
    can_be_sequenced:       { type: boolean, notnull: true, default: false }
    remarks:                { type: string }
  relations:
    DnaExtraction:          { foreignAlias: Pcr }
    DnaPolymerase:          { foreignAlias: Pcr }
    ForwardPrimer:          { class: DnaPrimer, local: forward_dna_primer_id, foreignAlias: Pcr }
    ReversePrimer:          { class: DnaPrimer, local: reverse_dna_primer_id, foreignAlias: Pcr }
    PcrProgram:             { foreignAlias: Pcr }
    Gel:                    { type: many, class: PcrGel, local:id, foreign: pcr_id, orderBy: number }

PcrGel:
  columns:
    id:       { type: integer, primary: true, autoincrement: true }
    number:   { type: integer, notnull: true }
    band:     { type: decimal }
    pcr_id:   { type: integer, notnull: true }
    is_valid: { type: boolean, notnull: true, default: false }
  relations:
    Pcr:      { foreignAlias: Gel, onDelete: cascade }

DnaSequence:
  columns:
    id:       { type: integer, primary: true, autoincrement: true }
    gen:      { type: string(10), notnull: true }
    date:     { type: date, notnull: true }
    worked:   { type: boolean, notnull: true, default: false }
    remarks:  { type: string }
    pcr_id:   { type: integer, notnull: true }
  relations:
    Pcr:      { foreignAlias: Sequence }

PcrReaction:
  columns:
    id:               { type: integer, primary: true, autoincrement: true }
    dna_primer_id:    { type: integer, notnull: true }
    worked:           { type: boolean, notnull: true, default: false }
    dna_sequence_id:  { type: integer, notnull: true }
  relations:
    DnaPrimer:        { foreignAlias: Reaction }
    DnaSequence:      { foreignAlias: Reaction, onDelete: cascade }

PcrProgramStep:
  columns:
    id:             { type: integer, primary: true, autoincrement: true }
    segment:        { type: integer, notnull: true }
    temperature:    { type: decimal, notnull: true }
    duration:       { type: time, notnull: true }
    pcr_program_id: { type: integer, notnull: true }
  relations:
    PcrProgram:     { foreignAlias: Steps, onDelete: cascade }

PcrProgram:
  columns:
    id:     { type: integer, primary: true, autoincrement: true }
    name:   { type: string(127), notnull: true }
    cycles: { type: integer, notnull: true }
    start:  { type: integer, notnull: true }
    end:    { type: integer, notnull: true }
  relations:
    Steps:  { type: many, class: PcrProgramStep, local:id, foreign: pcr_program_id, orderBy: segment }

Notification:
  columns:
    id:       { type: integer, primary: true, autoincrement: true }
    message:  { type: string, notnull: true }
    status:   { type: enum, values: [new, read, deleted] }
    user_id:  { type: integer, notnull: true }
  relations:
    User:     { class: sfGuardUser, local: user_id, foreignAlias: Notifications }

PurchaseOrder:
  columns:
    id:       { type: integer, primary: true, autoincrement: true }
    status:   { type: enum, values: [pending, processing, ready, sent] }
    code:     { type: string(40) }
    remarks:  { type: string }

PurchaseItem:
  columns:
    id:                 { type: integer, primary: true, autoincrement: true }
    status:             { type: enum, values: [pending, processing, ready] }
    product:            { type: enum, values: [strain, culture_medium, genomic_dna] }
    product_id:         { type: integer, notnull: true }
    amount:             { type: integer, notnull: true, default: 0 }
    remarks:            { type: string }
    purchase_order_id:  { type: integer, notnull: true }
  relations:
    PurchaseOrder:      { foreignAlias: Items, onDelete: cascade }
