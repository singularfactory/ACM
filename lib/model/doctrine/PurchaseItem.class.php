<?php

/**
* PurchaseItem
* 
* This class has been auto-generated by the Doctrine ORM Framework
* 
* @package    bna_green_house
* @subpackage model
* @author     Eliezer Talon <elitalon@inventiaplus.com>
* @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
*/
class PurchaseItem extends BasePurchaseItem {
	
	protected $products = array(
		'strain' => array(
			'table' => 'StrainTable',
			'default_description' => 'Strain',
		),
		'genomic_dna' => array(
			'table' => 'StrainTable',
			'default_description' => 'Genomic DNA from strain',
		),
		'culture_medium' => array(
			'table' => 'CultureMediumTable',
			'default_description' => 'Culture medium',
		),
	);
	
	public function getFormattedStatus() {
		switch( $this->_get('status') ) {
			case sfConfig::get('app_purchase_item_pending'):
				return 'pending';
				break;
			case sfConfig::get('app_purchase_item_processing'):
				return 'processing';
				break;
			case sfConfig::get('app_purchase_item_ready');
				return 'ready';
				break;
		}		
		return 'processing';
	}
	
	public function getDescription() {
		$product = $this->getProduct();
		$code = $this->getProductId();
		
		// Get product ID
		if ( $product === 'strain' ) {
			$id = preg_replace(sfConfig::get('app_strain_bea_code_regex'), '$1', $code);
		}
		else if ( $product === 'genomic_dna' ) {
			$id = preg_replace(sfConfig::get('app_strain_bea_code_regex'), '$1', $code);
		}
		else if ( $product === 'culture_medium' ) {
			$id = preg_replace(sfConfig::get('app_culture_medium_bea_code_regex'), '$1', $code);
		}
		
		// Get extra information about the product
		$tableInstance = call_user_func(array($this->products[$product]['table'], 'getInstance'));
		if ( $model = $tableInstance->findOneById($id) ) {
			return $this->products[$product]['default_description'].' '.$model->getCode();
		}
		
		return $this->products[$product]['default_description'];
	}
	
	public function getFormattedRemarks() {
		$remarks = $this->getRemarks();
		if ( empty($remarks) ) {
			return sfConfig::get('app_no_data_message');
		}
		else {
			return $remarks;
		}
	}
	
	public function getFormattedSupervisor() {
		$supervisor = $this->getSupervisor();
		if ( $supervisor->exists() ) {
			return $supervisor;
		}
		
		return sfConfig::get('app_no_data_message');
	}
	
}
