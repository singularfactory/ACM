<?php

/**
* PatentDeposit
* 
* This class has been auto-generated by the Doctrine ORM Framework
* 
* @package    bna_green_house
* @subpackage model
* @author     Eliezer Talon <elitalon@inventiaplus.com>
* @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
*/
class PatentDeposit extends BasePatentDeposit {
	
	public function getNbCultureMedia() {
		return count($this->getCultureMedia());
	}
	
	public function getNbRelatives() {
		return Doctrine_Query::create()
			->from('PatentDepositRelative r')
			->where('r.patent_deposit_id = ?', $this->getId())
			->count();
	}
		
	public function hasDna() {
		if ( $this->_get('has_dna') ) {
			return true;
		}
		return false;
	}
	
	public function getFormattedIsEpitype() {
		if ( $this->getIsEpitype() ) {
			return 'yes';
		}
		return 'no';
	}
	
	public function getFormattedHasDna() {
		if ( $this->hasDna() ) {
			return 'yes';
		}
		return 'no';
	}
	
	public function getFormattedIsPublic() {
		if ( $this->getIsPublic() ) {
			return 'yes';
		}
		return 'no';
	}
	
	public function getFormattedCitations() {
		if ( $citations = $this->_get('citations') ) {
			return $citations;
		}
		return sfConfig::get('app_no_data_message');
	}
	
	public function getFormattedTransferInterval() {
		if ( $transferInterval = $this->_get('transfer_interval') ) {
			return "$transferInterval weeks";
		}
		return sfConfig::get('app_no_data_message');
	}
	
	public function getFormattedObservation() {
		if ( $observation = $this->_get('observation') ) {
			return $observation;
		}
		return sfConfig::get('app_no_data_message');
	}
	
	public function getFormattedIsolationDate() {
		return $this->formatDate($this->_get('isolation_date'));
	}
	
	public function getNbIsolators() {
		return count($this->getIsolators());
	}
	
	public function getFormattedCollectors() {
		$isolators = '';
		foreach ( $this->getIsolators() as $isolator ) {
			$name = $isolator->getName();
			$surname = $isolator->getSurname();
			$isolators .= "$name $surname, ";
		}
		
		if ( empty($isolators) ) {
			return sfConfig::get('app_no_data_message');
		}
		else {
			return preg_replace('/, $/', '', $isolators);
		}
	}
		
}
