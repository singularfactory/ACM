<?php
/**
 * Model class
 *
 * acm : Algae Culture Management (https://github.com/singularfactory/ACM)
 * Copyright 2012, Singular Factory <info@singularfactory.com>
 *
 * This file is part of ACM
 *
 * ACM is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * ACM is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ACM.  If not, see <http://www.gnu.org/licenses/>.
 *
 * @copyright     Copyright 2012, Singular Factory <info@singularfactory.com>
 * @package       ACM.Lib.Model
 * @since         1.0
 * @link          https://github.com/singularfactory/ACM
 * @license       GPLv3 License (http://www.gnu.org/licenses/gpl.txt)
 */

/**
 * RegionTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class RegionTable extends Doctrine_Table {
	/**
	* Returns an instance of this class.
	*
	* @return object RegionTable
	*/
	public static function getInstance() {
		return Doctrine_Core::getTable('Region');
	}

	/**
	 * Returns the ID of the default region to show in selects
	 *
	 * @param	string	$countryId
	 * @return	integer
	 *
 * @since 1.0	 */
	public function getDefaultRegionId($countryId) {
		$region = $this->createQuery()
			->from('Region r')
			->where('r.name LIKE ?', '%'.sfConfig::get('app_default_region_name').'%')
			->fetchOne();

		if ( $region ) {
			return $region->getId();
		}

		return null;
	}

	/**
	 * Returns a query that select regions of a country
	 *
	 * @param string $countryId
	 * @return object DoctrineRecord
	 */
	public function getRegionsQuery($countryId = null) {
		$query = $this->createQuery('r');
		if ( $countryId ) {
			$query->where('r.country_id = ?', $countryId);
		}
		return $query;
	}

	/**
	 * Returns a list of regions, optionally filter by country
	 *
	 * @param integer $countryId Id of a country
	 * @return object DoctrineRecord
	 */
	public function getRegions($countryId = null) {
		return $this->getRegionsQuery($countryId)->execute();
	}

}