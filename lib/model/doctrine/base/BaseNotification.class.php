<?php

/**
 * BaseNotification
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $message
 * @property enum $status
 * @property integer $user_id
 * @property sfGuardUser $User
 * 
 * @method integer      getId()      Returns the current record's "id" value
 * @method string       getMessage() Returns the current record's "message" value
 * @method enum         getStatus()  Returns the current record's "status" value
 * @method integer      getUserId()  Returns the current record's "user_id" value
 * @method sfGuardUser  getUser()    Returns the current record's "User" value
 * @method Notification setId()      Sets the current record's "id" value
 * @method Notification setMessage() Sets the current record's "message" value
 * @method Notification setStatus()  Sets the current record's "status" value
 * @method Notification setUserId()  Sets the current record's "user_id" value
 * @method Notification setUser()    Sets the current record's "User" value
 * 
 * @package    bna_green_house
 * @subpackage model
 * @author     Eliezer Talon <elitalon@inventiaplus.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseNotification extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('notification');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('message', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'new',
              1 => 'read',
              2 => 'deleted',
             ),
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));

        $this->option('type', 'INNODB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}