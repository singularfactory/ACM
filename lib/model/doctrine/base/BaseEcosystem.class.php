<?php

/**
 * BaseEcosystem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property integer $latitude_degrees
 * @property integer $longitude_degrees
 * @property float $latitude_minutes
 * @property float $longitude_minutes
 * @property integer $country_id
 * @property integer $province_id
 * @property string $picture_1
 * @property string $picture_2
 * @property string $picture_3
 * @property string $picture_4
 * @property string $picture_5
 * @property string $city
 * @property string $remarks
 * @property Country $Country
 * @property Province $Province
 * @property Doctrine_Collection $Samples
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method string              getName()              Returns the current record's "name" value
 * @method integer             getLatitudeDegrees()   Returns the current record's "latitude_degrees" value
 * @method integer             getLongitudeDegrees()  Returns the current record's "longitude_degrees" value
 * @method float               getLatitudeMinutes()   Returns the current record's "latitude_minutes" value
 * @method float               getLongitudeMinutes()  Returns the current record's "longitude_minutes" value
 * @method integer             getCountryId()         Returns the current record's "country_id" value
 * @method integer             getProvinceId()        Returns the current record's "province_id" value
 * @method string              getPicture1()          Returns the current record's "picture_1" value
 * @method string              getPicture2()          Returns the current record's "picture_2" value
 * @method string              getPicture3()          Returns the current record's "picture_3" value
 * @method string              getPicture4()          Returns the current record's "picture_4" value
 * @method string              getPicture5()          Returns the current record's "picture_5" value
 * @method string              getCity()              Returns the current record's "city" value
 * @method string              getRemarks()           Returns the current record's "remarks" value
 * @method Country             getCountry()           Returns the current record's "Country" value
 * @method Province            getProvince()          Returns the current record's "Province" value
 * @method Doctrine_Collection getSamples()           Returns the current record's "Samples" collection
 * @method Ecosystem           setId()                Sets the current record's "id" value
 * @method Ecosystem           setName()              Sets the current record's "name" value
 * @method Ecosystem           setLatitudeDegrees()   Sets the current record's "latitude_degrees" value
 * @method Ecosystem           setLongitudeDegrees()  Sets the current record's "longitude_degrees" value
 * @method Ecosystem           setLatitudeMinutes()   Sets the current record's "latitude_minutes" value
 * @method Ecosystem           setLongitudeMinutes()  Sets the current record's "longitude_minutes" value
 * @method Ecosystem           setCountryId()         Sets the current record's "country_id" value
 * @method Ecosystem           setProvinceId()        Sets the current record's "province_id" value
 * @method Ecosystem           setPicture1()          Sets the current record's "picture_1" value
 * @method Ecosystem           setPicture2()          Sets the current record's "picture_2" value
 * @method Ecosystem           setPicture3()          Sets the current record's "picture_3" value
 * @method Ecosystem           setPicture4()          Sets the current record's "picture_4" value
 * @method Ecosystem           setPicture5()          Sets the current record's "picture_5" value
 * @method Ecosystem           setCity()              Sets the current record's "city" value
 * @method Ecosystem           setRemarks()           Sets the current record's "remarks" value
 * @method Ecosystem           setCountry()           Sets the current record's "Country" value
 * @method Ecosystem           setProvince()          Sets the current record's "Province" value
 * @method Ecosystem           setSamples()           Sets the current record's "Samples" collection
 * 
 * @package    bna_green_house
 * @subpackage model
 * @author     Eliezer Talon <elitalon@inventiaplus.com>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseEcosystem extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ecosystem');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('latitude_degrees', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('longitude_degrees', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('latitude_minutes', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('longitude_minutes', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('country_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('province_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('picture_1', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('picture_2', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('picture_3', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('picture_4', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('picture_5', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('city', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('remarks', 'string', null, array(
             'type' => 'string',
             ));

        $this->option('type', 'INNODB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Country', array(
             'local' => 'country_id',
             'foreign' => 'id'));

        $this->hasOne('Province', array(
             'local' => 'province_id',
             'foreign' => 'id'));

        $this->hasMany('Sample as Samples', array(
             'local' => 'id',
             'foreign' => 'ecosystem_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}