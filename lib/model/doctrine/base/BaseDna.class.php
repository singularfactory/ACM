<?php

/**
 * BaseDna
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $accession_number
 * @property string $filename
 * @property Strain $Strain
 * 
 * @method integer getId()               Returns the current record's "id" value
 * @method string  getAccessionNumber()  Returns the current record's "accession_number" value
 * @method string  getFilename()         Returns the current record's "filename" value
 * @method Strain  getStrain()           Returns the current record's "Strain" value
 * @method Dna     setId()               Sets the current record's "id" value
 * @method Dna     setAccessionNumber()  Sets the current record's "accession_number" value
 * @method Dna     setFilename()         Sets the current record's "filename" value
 * @method Dna     setStrain()           Sets the current record's "Strain" value
 * 
 * @package    bna_green_house
 * @subpackage model
 * @author     Eliezer Talon <elitalon@inventiaplus.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDna extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('dna');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('accession_number', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('filename', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));

        $this->option('type', 'INNODB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Strain', array(
             'local' => 'id',
             'foreign' => 'dna_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}