<?php

/**
 * BaseCryopreservation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property enum $subject
 * @property integer $strain_id
 * @property integer $sample_id
 * @property integer $external_strain_id
 * @property integer $cryopreservation_method_id
 * @property date $cryopreservation_date
 * @property string $first_replicate
 * @property string $second_replicate
 * @property string $third_replicate
 * @property float $density
 * @property date $revival_date
 * @property boolean $viability
 * @property string $remarks
 * @property Sample $Sample
 * @property Strain $Strain
 * @property ExternalStrain $ExternalStrain
 * @property CryopreservationMethod $CryopreservationMethod
 * 
 * @method integer                getId()                         Returns the current record's "id" value
 * @method enum                   getSubject()                    Returns the current record's "subject" value
 * @method integer                getStrainId()                   Returns the current record's "strain_id" value
 * @method integer                getSampleId()                   Returns the current record's "sample_id" value
 * @method integer                getExternalStrainId()           Returns the current record's "external_strain_id" value
 * @method integer                getCryopreservationMethodId()   Returns the current record's "cryopreservation_method_id" value
 * @method date                   getCryopreservationDate()       Returns the current record's "cryopreservation_date" value
 * @method string                 getFirstReplicate()             Returns the current record's "first_replicate" value
 * @method string                 getSecondReplicate()            Returns the current record's "second_replicate" value
 * @method string                 getThirdReplicate()             Returns the current record's "third_replicate" value
 * @method float                  getDensity()                    Returns the current record's "density" value
 * @method date                   getRevivalDate()                Returns the current record's "revival_date" value
 * @method boolean                getViability()                  Returns the current record's "viability" value
 * @method string                 getRemarks()                    Returns the current record's "remarks" value
 * @method Sample                 getSample()                     Returns the current record's "Sample" value
 * @method Strain                 getStrain()                     Returns the current record's "Strain" value
 * @method ExternalStrain         getExternalStrain()             Returns the current record's "ExternalStrain" value
 * @method CryopreservationMethod getCryopreservationMethod()     Returns the current record's "CryopreservationMethod" value
 * @method Cryopreservation       setId()                         Sets the current record's "id" value
 * @method Cryopreservation       setSubject()                    Sets the current record's "subject" value
 * @method Cryopreservation       setStrainId()                   Sets the current record's "strain_id" value
 * @method Cryopreservation       setSampleId()                   Sets the current record's "sample_id" value
 * @method Cryopreservation       setExternalStrainId()           Sets the current record's "external_strain_id" value
 * @method Cryopreservation       setCryopreservationMethodId()   Sets the current record's "cryopreservation_method_id" value
 * @method Cryopreservation       setCryopreservationDate()       Sets the current record's "cryopreservation_date" value
 * @method Cryopreservation       setFirstReplicate()             Sets the current record's "first_replicate" value
 * @method Cryopreservation       setSecondReplicate()            Sets the current record's "second_replicate" value
 * @method Cryopreservation       setThirdReplicate()             Sets the current record's "third_replicate" value
 * @method Cryopreservation       setDensity()                    Sets the current record's "density" value
 * @method Cryopreservation       setRevivalDate()                Sets the current record's "revival_date" value
 * @method Cryopreservation       setViability()                  Sets the current record's "viability" value
 * @method Cryopreservation       setRemarks()                    Sets the current record's "remarks" value
 * @method Cryopreservation       setSample()                     Sets the current record's "Sample" value
 * @method Cryopreservation       setStrain()                     Sets the current record's "Strain" value
 * @method Cryopreservation       setExternalStrain()             Sets the current record's "ExternalStrain" value
 * @method Cryopreservation       setCryopreservationMethod()     Sets the current record's "CryopreservationMethod" value
 * 
 * @package    bna_green_house
 * @subpackage model
 * @author     Eliezer Talon <elitalon@inventiaplus.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCryopreservation extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cryopreservation');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('subject', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'sample',
              1 => 'strain',
              2 => 'external_strain',
             ),
             ));
        $this->hasColumn('strain_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('sample_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('external_strain_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('cryopreservation_method_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('cryopreservation_date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('first_replicate', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             ));
        $this->hasColumn('second_replicate', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             ));
        $this->hasColumn('third_replicate', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             ));
        $this->hasColumn('density', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('revival_date', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('viability', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('remarks', 'string', null, array(
             'type' => 'string',
             ));


        $this->index('cryopreservation_date', array(
             'fields' => 
             array(
              0 => 'cryopreservation_date',
             ),
             ));
        $this->option('type', 'INNODB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Sample', array(
             'local' => 'sample_id',
             'foreign' => 'id'));

        $this->hasOne('Strain', array(
             'local' => 'strain_id',
             'foreign' => 'id'));

        $this->hasOne('ExternalStrain', array(
             'local' => 'external_strain_id',
             'foreign' => 'id'));

        $this->hasOne('CryopreservationMethod', array(
             'local' => 'cryopreservation_method_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $date0 = new Date();
        $this->actAs($timestampable0);
        $this->actAs($date0);
    }
}