<?php

/**
 * BaseLocationPicture
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $filename
 * @property integer $location_id
 * @property Location $Location
 * 
 * @method integer         getId()          Returns the current record's "id" value
 * @method string          getFilename()    Returns the current record's "filename" value
 * @method integer         getLocationId()  Returns the current record's "location_id" value
 * @method Location        getLocation()    Returns the current record's "Location" value
 * @method LocationPicture setId()          Sets the current record's "id" value
 * @method LocationPicture setFilename()    Sets the current record's "filename" value
 * @method LocationPicture setLocationId()  Sets the current record's "location_id" value
 * @method LocationPicture setLocation()    Sets the current record's "Location" value
 * 
 * @package    ACM
 * @subpackage model
 * @author     
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLocationPicture extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('location_picture');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('filename', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('location_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));

        $this->option('type', 'INNODB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Location', array(
             'local' => 'location_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $picture0 = new Picture(array(
             'moduleName' => 'location',
             ));
        $this->actAs($timestampable0);
        $this->actAs($picture0);
    }
}