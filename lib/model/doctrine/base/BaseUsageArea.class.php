<?php

/**
 * BaseUsageArea
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property Doctrine_Collection $Usages
 * @property Doctrine_Collection $UsageAreaUsages
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method string              getName()            Returns the current record's "name" value
 * @method Doctrine_Collection getUsages()          Returns the current record's "Usages" collection
 * @method Doctrine_Collection getUsageAreaUsages() Returns the current record's "UsageAreaUsages" collection
 * @method UsageArea           setId()              Sets the current record's "id" value
 * @method UsageArea           setName()            Sets the current record's "name" value
 * @method UsageArea           setUsages()          Sets the current record's "Usages" collection
 * @method UsageArea           setUsageAreaUsages() Sets the current record's "UsageAreaUsages" collection
 * 
 * @package    ACM
 * @subpackage model
 * @author     
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUsageArea extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('usage_area');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 128, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 128,
             ));


        $this->index('usage_area_name', array(
             'fields' => 
             array(
              'name' => 
              array(
              'length' => 5,
              ),
             ),
             ));
        $this->option('type', 'INNODB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('PotentialUsage as Usages', array(
             'refClass' => 'UsageAreaUsages',
             'local' => 'usage_area_id',
             'foreign' => 'usage_id'));

        $this->hasMany('UsageAreaUsages', array(
             'local' => 'id',
             'foreign' => 'usage_area_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}