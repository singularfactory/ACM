<?php
/**
 * Model class
 *
 * acm : Algae Culture Management (https://github.com/singularfactory/ACM)
 * Copyright 2012, Singular Factory <info@singularfactory.com>
 *
 * This file is part of ACM
 *
 * ACM is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * ACM is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ACM.  If not, see <http://www.gnu.org/licenses/>.
 *
 * @copyright     Copyright 2012, Singular Factory <info@singularfactory.com>
 * @package       ACM.Lib.Model
 * @since         1.0
 * @link          https://github.com/singularfactory/ACM
 * @license       GPLv3 License (http://www.gnu.org/licenses/gpl.txt)
 */


/**
 * BasePurchaseOrder
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @property integer $id
 * @property enum $status
 * @property string $code
 * @property string $customer
 * @property string $remarks
 * @property timestamp $activation_date
 * @property timestamp $delivery_date
 * @property string $delivery_code
 * @property Doctrine_Collection $Items
 *
 * @method integer             getId()              Returns the current record's "id" value
 * @method enum                getStatus()          Returns the current record's "status" value
 * @method string              getCode()            Returns the current record's "code" value
 * @method string              getCustomer()        Returns the current record's "customer" value
 * @method string              getRemarks()         Returns the current record's "remarks" value
 * @method timestamp           getActivationDate()  Returns the current record's "activation_date" value
 * @method timestamp           getDeliveryDate()    Returns the current record's "delivery_date" value
 * @method string              getDeliveryCode()    Returns the current record's "delivery_code" value
 * @method Doctrine_Collection getItems()           Returns the current record's "Items" collection
 * @method PurchaseOrder       setId()              Sets the current record's "id" value
 * @method PurchaseOrder       setStatus()          Sets the current record's "status" value
 * @method PurchaseOrder       setCode()            Sets the current record's "code" value
 * @method PurchaseOrder       setCustomer()        Sets the current record's "customer" value
 * @method PurchaseOrder       setRemarks()         Sets the current record's "remarks" value
 * @method PurchaseOrder       setActivationDate()  Sets the current record's "activation_date" value
 * @method PurchaseOrder       setDeliveryDate()    Sets the current record's "delivery_date" value
 * @method PurchaseOrder       setDeliveryCode()    Sets the current record's "delivery_code" value
 * @method PurchaseOrder       setItems()           Sets the current record's "Items" collection
 *
 * @package ACM.Lib.Model
 * @since 1.0
 */
abstract class BasePurchaseOrder extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('purchase_order');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' =>
             array(
              0 => 'pending',
              1 => 'processing',
              2 => 'ready',
             ),
             ));
        $this->hasColumn('code', 'string', 40, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 40,
             ));
        $this->hasColumn('customer', 'string', 512, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 512,
             ));
        $this->hasColumn('remarks', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('activation_date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('delivery_date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('delivery_code', 'string', 80, array(
             'type' => 'string',
             'length' => 80,
             ));


        $this->index('purchase_order_status', array(
             'fields' =>
             array(
              0 => 'status',
             ),
             ));
        $this->option('type', 'INNODB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('PurchaseItem as Items', array(
             'local' => 'id',
             'foreign' => 'purchase_order_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $date0 = new Date();
        $saleable0 = new Saleable();
        $this->actAs($timestampable0);
        $this->actAs($date0);
        $this->actAs($saleable0);
    }
}