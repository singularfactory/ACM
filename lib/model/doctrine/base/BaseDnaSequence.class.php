<?php
/**
 * Model class
 *
 * acm : Algae Culture Management (https://github.com/singularfactory/ACM)
 * Copyright 2012, Singular Factory <info@singularfactory.com>
 *
 * This file is part of ACM
 *
 * ACM is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * ACM is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ACM.  If not, see <http://www.gnu.org/licenses/>.
 *
 * @copyright     Copyright 2012, Singular Factory <info@singularfactory.com>
 * @package       ACM.Lib.Model
 * @since         1.0
 * @link          https://github.com/singularfactory/ACM
 * @license       GPLv3 License (http://www.gnu.org/licenses/gpl.txt)
 */


/**
 * BaseDnaSequence
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @property integer $id
 * @property string $gen
 * @property date $date
 * @property boolean $worked
 * @property string $remarks
 * @property integer $pcr_id
 * @property Pcr $Pcr
 * @property Doctrine_Collection $Reaction
 *
 * @method integer             getId()       Returns the current record's "id" value
 * @method string              getGen()      Returns the current record's "gen" value
 * @method date                getDate()     Returns the current record's "date" value
 * @method boolean             getWorked()   Returns the current record's "worked" value
 * @method string              getRemarks()  Returns the current record's "remarks" value
 * @method integer             getPcrId()    Returns the current record's "pcr_id" value
 * @method Pcr                 getPcr()      Returns the current record's "Pcr" value
 * @method Doctrine_Collection getReaction() Returns the current record's "Reaction" collection
 * @method DnaSequence         setId()       Sets the current record's "id" value
 * @method DnaSequence         setGen()      Sets the current record's "gen" value
 * @method DnaSequence         setDate()     Sets the current record's "date" value
 * @method DnaSequence         setWorked()   Sets the current record's "worked" value
 * @method DnaSequence         setRemarks()  Sets the current record's "remarks" value
 * @method DnaSequence         setPcrId()    Sets the current record's "pcr_id" value
 * @method DnaSequence         setPcr()      Sets the current record's "Pcr" value
 * @method DnaSequence         setReaction() Sets the current record's "Reaction" collection
 *
 * @package ACM.Lib.Model
 * @since 1.0
 */
abstract class BaseDnaSequence extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('dna_sequence');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('gen', 'string', 10, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 10,
             ));
        $this->hasColumn('date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('worked', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('remarks', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('pcr_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));

        $this->option('type', 'INNODB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Pcr', array(
             'local' => 'pcr_id',
             'foreign' => 'id'));

        $this->hasMany('PcrReaction as Reaction', array(
             'local' => 'id',
             'foreign' => 'dna_sequence_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}