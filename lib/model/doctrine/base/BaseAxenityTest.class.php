<?php

/**
 * BaseAxenityTest
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property date $date
 * @property integer $strain_id
 * @property Strain $Strain
 * 
 * @method integer     getId()        Returns the current record's "id" value
 * @method date        getDate()      Returns the current record's "date" value
 * @method integer     getStrainId()  Returns the current record's "strain_id" value
 * @method Strain      getStrain()    Returns the current record's "Strain" value
 * @method AxenityTest setId()        Sets the current record's "id" value
 * @method AxenityTest setDate()      Sets the current record's "date" value
 * @method AxenityTest setStrainId()  Sets the current record's "strain_id" value
 * @method AxenityTest setStrain()    Sets the current record's "Strain" value
 * 
 * @package    bna_green_house
 * @subpackage model
 * @author     Eliezer Talon <elitalon@inventiaplus.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAxenityTest extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('axenity_test');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('strain_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));

        $this->option('type', 'INNODB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Strain', array(
             'local' => 'strain_id',
             'foreign' => 'id',
             'onDelete' => 'cascade',
             'onUpdate' => 'cascade'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $date0 = new Date();
        $this->actAs($timestampable0);
        $this->actAs($date0);
    }
}