<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class Version214 extends Doctrine_Migration_Base {
	public function up() {
		$this->createForeignKey('strain_properties', 'strain_properties_strain_id_strain_id', array(
			'name' => 'strain_properties_strain_id_strain_id',
			'local' => 'strain_id',
			'foreign' => 'id',
			'foreignTable' => 'strain',
			'onUpdate' => 'cascade',
			'onDelete' => 'cascade',
		));
		//$this->addIndex('strain_properties', 'strain_properties_strain_id', array('fields' => array(0 => 'strain_id',),));

		$this->createForeignKey('strain_properties', 'strain_properties_property_id_strain_property_id', array(
			'name' => 'strain_properties_property_id_strain_property_id',
			'local' => 'property_id',
			'foreign' => 'id',
			'foreignTable' => 'strain_property',
			'onUpdate' => 'cascade',
			'onDelete' => 'cascade',
		));
		//$this->addIndex('strain_properties', 'strain_properties_property_id', array('fields' => array(0 => 'property_id',),));
	}

	public function postUp() {
		$gCatalog = StrainPropertyTable::getInstance()->createQuery('p')->where('p.name LIKE ?', '%catalog%')->fetchOne();

		$strains = StrainTable::getInstance()->createQuery('s')->execute();	
		foreach ($strains as $strain) {
			if ($strain->getInGCatalog()) {
				echo sprintf("%s\n", $strain->getFullCode());
				$strainProperty = new StrainProperties();
				$strainProperty->setPropertyId($gCatalog->getId());
				$strainProperty->setStrainId($strain->getId());
				$strainProperty->trySave();
			}
		}
	}

	public function down() {
		//$this->removeIndex('strain_properties', 'strain_properties_strain_id', array('fields' => array(0 => 'strain_id',),));
		$this->dropForeignKey('strain_properties', 'strain_properties_strain_id_strain_id');

		//$this->removeIndex('strain_properties', 'strain_properties_property_id', array('fields' => array(0 => 'property_id',),));
		$this->dropForeignKey('strain_properties', 'strain_properties_property_id_strain_property_id');
	}
}
