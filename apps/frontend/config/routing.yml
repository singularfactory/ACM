###
# Country model related routes
###
country_find_regions:
  url:    country/findRegions/:country
  param:  { module: country, action: findRegions }
  requirements: { country: .* } # Search pattern is optional, by default all results are shown


###
# Region model related routes
###
region_find_islands:
  url:    region/findIslands/:region
  param:  { module: region, action: findIslands }
  requirements: { region: .* } # Search pattern is optional, by default all results are shown


###
# Location model related routes
###
location:
  class:   sfDoctrineRouteCollection
  options: { model: Location }

location_search:
  url:          location/search/:criteria
  param:        { module: location, action: index }
  requirements: { criteria: "[^/]*" }  # Search pattern is optional, by default all results are shown

location_pagination:
  url:          location/page/:page
  param:        { module: location, action: index, page: 1 }
  requirements: { page: \d+ }

location_search_pagination:
  url:          location/search/:criteria/page/:page
  param:        { module: location, action: index, page: 1 }
  requirements: { criteria: "[^/]+", page: \d+ }


###
# Sample model related routes
###
sample:
  class:   sfDoctrineRouteCollection
  options: { model: Sample }

sample_search:
  url:          sample/search/:criteria
  param:        { module: sample, action: index }
  requirements: { criteria: "[^/]*" }  # Search pattern is optional, by default all results are shown

sample_find_locations:
  url:    sample/findLocations/:term
  param:  { module: sample, action: findLocations }
  requirements: { term: .* }  # Search pattern is optional, by default all results are shown

sample_pagination:
  url:          sample/page/:page
  param:        { module: sample, action: index, page: 1 }
  requirements: { page: \d+ }

sample_search_pagination:
  url:          sample/search/:criteria/page/:page
  param:        { module: sample, action: index, page: 1 }
  requirements: { criteria: "[^/]+", page: \d+ }


###
# Strain model related routes
###
strain:
  class:   sfDoctrineRouteCollection
  options: { model: Strain }

strain_search:
  url:          strain/search/:criteria
  param:        { module: strain, action: index }
  requirements: { criteria: "[^/]*" }  # Search pattern is optional, by default all results are shown

strain_find_samples:
  url:    strain/findSamples/:term
  param:  { module: strain, action: findSamples }
  requirements: { term: .* }  # Search pattern is optional, by default all results are shown

strain_pagination:
  url:          strain/page/:page
  param:        { module: strain, action: index, page: 1 }
  requirements: { page: \d+ }

strain_search_pagination:
  url:          strain/search/:criteria/page/:page
  param:        { module: strain, action: index, page: 1 }
  requirements: { criteria: "[^/]+", page: \d+ }

strain_new_related_model_form:
  url:          strain/new_related_model/:related_model
  param:        { module: strain, action: newRelatedModelEmbeddedForm }
  requirements: { sf_method: get, related_model: "[^/]+" }


###
# GrowthMedium model related routes
###
growth_medium:
  class:   sfDoctrineRouteCollection
  options: { model: GrowthMedium }

growth_medium_search:
  url:          growth_medium/search/:criteria
  param:        { module: growth_medium, action: index }
  requirements: { criteria: "[^/]*" }  # Search pattern is optional, by default all results are shown

growth_medium_pagination:
  url:          growth_medium/page/:page
  param:        { module: growth_medium, action: index, page: 1 }
  requirements: { page: \d+ }

growth_medium_search_pagination:
  url:          growth_medium/search/:criteria/page/:page
  param:        { module: growth_medium, action: index, page: 1 }
  requirements: { criteria: "[^/]+", page: \d+ }


###
# DnaExtraction model related routes
###
dna_extraction:
  class:   sfDoctrineRouteCollection
  options: { model: DnaExtraction }

dna_extraction_search:
  url:          dna_extraction/search/:criteria
  param:        { module: dna_extraction, action: index }
  requirements: { criteria: "[^/]*" }  # Search pattern is optional, by default all results are shown

dna_extraction_find_strains:
  url:          dna_extraction/findStrains/:term
  param:        { module: dna_extraction, action: findStrains }
  requirements: { term: .* }  # Search pattern is optional, by default all results are shown

dna_extraction_pagination:
  url:          dna_extraction/page/:page
  param:        { module: dna_extraction, action: index, page: 1 }
  requirements: { page: \d+ }

dna_extraction_search_pagination:
  url:          dna_extraction/search/:criteria/page/:page
  param:        { module: dna_extraction, action: index, page: 1 }
  requirements: { criteria: "[^/]+", page: \d+ }


###
# Pcr model related routes
###
pcr:
  class:   sfDoctrineRouteCollection
  options: { model: Pcr, actions: [create, edit, update, delete, show] }

pcr_new:
  url:          /pcr/new/:dna_extraction
  class:        sfDoctrineRoute
  param:        { module: pcr, action: new }
  requirements: { sf_method: [get, head] }
  options:      { model: Pcr, type: object }


###
# PcrGel model related routes
###
pcr_gel:
  class:   sfDoctrineRouteCollection
  options: { model: PcrGel, actions: [edit, update, delete] }


###
# DnaSequence model related routes
###
dna_sequence:
  class:   sfDoctrineRouteCollection
  options: { model: DnaSequence, actions: [create, edit, update, delete, show] }

dna_sequence_new:
  url:          /dna_sequence/new/:pcr
  class:        sfDoctrineRoute
  param:        { module: dna_sequence, action: new }
  requirements: { sf_method: [get, head] }
  options:      { model: DnaSequence, type: object }


###
# PcrReaction model related routes
###
pcr_reaction:
  class:   sfDoctrineRouteCollection
  options: { model: PcrReaction, actions: [edit, update, delete] }


###
# sfGuardUser model related routes
###
profile:
  class:      sfDoctrineRouteCollection
  options:
    model:    sfGuardUser
    actions:  [edit, update]

profile_shortcut:
  class:        sfDoctrineRoute
  options:      { model: sfGuardUser, type: object }
  url:          /profile/:id
  param:        { module: profile, action: edit }
  requirements: { id: '[0-9]+' }

profile_token_regeneration:
  class:    sfDoctrineRoute
  options:  { model: sfGuardUser, type: object }
  url:      /profile/new_token
  param:    { module: profile, action: newToken }

login:
  url:   /login
  param: { module: sfGuardAuth, action: signin }

logout:
  url:   /logout
  param: { module: sfGuardAuth, action: signout }

upload_progress:
  url:    /:module/uploadProgress/:id
  param:  { action: uploadProgress }


###
# API routes
###
api_sampling_information:
  url:          /api/:token/samplingInformation/:timestamp
  param:        { module: api, action: samplingInformation }
  requirements: { sf_method: get, timestamp: \d+ }

api_sync_sampling_information:
  url:          /api/:token/syncSamplingInformation
  param:        { module: api, action: syncSamplingInformation }
  requirements: { sf_method: post }

api_new_purchase_order:
  url:          /api/:token/newPurchaseOrder
  param:        { module: api, action: newPurchaseOrder }
  requirements: { sf_method: post }


###
# Inbox routes
###
inbox:
  class:   sfDoctrineRouteCollection
  options: { model: Notification, actions: [list, show, delete] }

inbox_search:
  url:          inbox/search/:criteria
  param:        { module: inbox, action: index }
  requirements: { criteria: "[^/]*" }  # Search pattern is optional, by default all results are shown

inbox_pagination:
  url:          inbox/page/:page
  param:        { module: inbox, action: index, page: 1 }
  requirements: { page: \d+ }

inbox_search_pagination:
  url:          inbox/search/:criteria/page/:page
  param:        { module: inbox, action: index, page: 1 }
  requirements: { criteria: "[^/]+", page: \d+ }


###
# Default rules
###
homepage:
  url:    /
  param:  { module: sample, action: index }

